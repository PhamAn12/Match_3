//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TypeMechanicComponent typeMechanic { get { return (TypeMechanicComponent)GetComponent(GameComponentsLookup.TypeMechanic); } }
    public bool hasTypeMechanic { get { return HasComponent(GameComponentsLookup.TypeMechanic); } }

    public void AddTypeMechanic(string newType) {
        var index = GameComponentsLookup.TypeMechanic;
        var component = (TypeMechanicComponent)CreateComponent(index, typeof(TypeMechanicComponent));
        component.type = newType;
        AddComponent(index, component);
    }

    public void ReplaceTypeMechanic(string newType) {
        var index = GameComponentsLookup.TypeMechanic;
        var component = (TypeMechanicComponent)CreateComponent(index, typeof(TypeMechanicComponent));
        component.type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveTypeMechanic() {
        RemoveComponent(GameComponentsLookup.TypeMechanic);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTypeMechanic;

    public static Entitas.IMatcher<GameEntity> TypeMechanic {
        get {
            if (_matcherTypeMechanic == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TypeMechanic);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTypeMechanic = matcher;
            }

            return _matcherTypeMechanic;
        }
    }
}
