//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TypeTapOnComponent typeTapOn { get { return (TypeTapOnComponent)GetComponent(GameComponentsLookup.TypeTapOn); } }
    public bool hasTypeTapOn { get { return HasComponent(GameComponentsLookup.TypeTapOn); } }

    public void AddTypeTapOn(string newTypeTap) {
        var index = GameComponentsLookup.TypeTapOn;
        var component = (TypeTapOnComponent)CreateComponent(index, typeof(TypeTapOnComponent));
        component.typeTap = newTypeTap;
        AddComponent(index, component);
    }

    public void ReplaceTypeTapOn(string newTypeTap) {
        var index = GameComponentsLookup.TypeTapOn;
        var component = (TypeTapOnComponent)CreateComponent(index, typeof(TypeTapOnComponent));
        component.typeTap = newTypeTap;
        ReplaceComponent(index, component);
    }

    public void RemoveTypeTapOn() {
        RemoveComponent(GameComponentsLookup.TypeTapOn);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTypeTapOn;

    public static Entitas.IMatcher<GameEntity> TypeTapOn {
        get {
            if (_matcherTypeTapOn == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TypeTapOn);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTypeTapOn = matcher;
            }

            return _matcherTypeTapOn;
        }
    }
}
